services:
  division-api:
    build:
      context: ../../division_api  # Adjust the path if necessary
    container_name: division-api-server
    restart: unless-stopped
    ports:
      - '8002:8000'  # Exposes the API server on port 8000
    environment:
      # Supabase configuration
      SUPABASE_URL: ${SUPABASE_URL}
      SUPABASE_KEY: ${SERVICE_ROLE_KEY}

      # Your environment variables
      CENTRAL_API_BASE_URL: ${CENTRAL_API_BASE_URL}
      CENTRAL_API_KEY: ${CENTRAL_API_KEY}
      OPENAI_KEY: ${OPENAI_KEY}
      GOOGLE_KEY: ${GOOGLE_KEY}
      AGENT_COMM_API_BASE_URL: ${AGENT_COMM_API_BASE_URL}
      CUSTOMER_AGENT_BASE_URL: ${CUSTOMER_AGENT_BASE_URL}
      DIVISION_TAG: ${DIVISION_TAG}
      COMPANY_NAME: ${COMPANY_NAME}
      

    depends_on:
      - kong  # Supabase's API gateway


  db:
    volumes:
      - ./volumes/db/realtime.sql:/docker-entrypoint-initdb.d/migrations/99-realtime.sql:Z
      - ./volumes/db/webhooks.sql:/docker-entrypoint-initdb.d/init-scripts/98-webhooks.sql:Z
      - ./volumes/db/roles.sql:/docker-entrypoint-initdb.d/init-scripts/99-roles.sql:Z
      - ./volumes/db/jwt.sql:/docker-entrypoint-initdb.d/init-scripts/99-jwt.sql:Z
      - ./volumes/db/data:/var/lib/postgresql/data:Z
      - ./volumes/db/_supabase.sql:/docker-entrypoint-initdb.d/migrations/97-_supabase.sql:Z
      - ./volumes/db/logs.sql:/docker-entrypoint-initdb.d/migrations/99-logs.sql:Z
      - ./volumes/db/pooler.sql:/docker-entrypoint-initdb.d/migrations/99-pooler.sql:Z
      - db-config:/etc/postgresql-custom

      - ../../division_schema.sql:/docker-entrypoint-initdb.d/init-scripts/999-division_schema.sql:Z


volumes:
  db-config:


# PREVIOUSLY UNDER db:
# image: supabase/postgres:15.1.1.78
# container_name: supabase-db
# healthcheck:
#   test: pg_isready -U postgres -h localhost
#   interval: 5s
#   timeout: 5s
#   retries: 10
# depends_on:
#   vector:
#     condition: service_healthy
# command:
#   - postgres
#   - -c
#   - config_file=/etc/postgresql/postgresql.conf
#   - -c
#   - log_min_messages=fatal  # Prevents Realtime polling queries from appearing in logs
# restart: unless-stopped
# environment:
#   POSTGRES_HOST: /var/run/postgresql
#   PGPORT: ${POSTGRES_PORT}
#   POSTGRES_PORT: ${POSTGRES_PORT}
#   PGPASSWORD: ${POSTGRES_PASSWORD}
#   POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#   PGDATABASE: ${POSTGRES_DB}
#   POSTGRES_DB: ${POSTGRES_DB}
#   JWT_SECRET: ${JWT_SECRET}
#   JWT_EXP: ${JWT_EXPIRY}